{"version":3,"sources":["components/ClueForm.tsx","constants.ts","pages/CluePage.tsx","skeleton/Skeleton.tsx","pages/WelcomePage.tsx","pages/FinalPage.tsx","index.js"],"names":["ClueForm","props","Form","onChange","formValues","setFormValues","answer","onSubmit","FormField","name","TextInput","type","textAlign","formError","Box","pad","vertical","Text","color","align","Button","label","FADE_OUT","slugifyAnswer","toLowerCase","replaceAll","CluePage","clue","useState","value","setValue","answerCorrect","setAnswerCorrect","setFormError","formSubmitted","setFormSubmitted","redirect","setRedirect","useEffect","setTimeout","hint","boxFade","duration","to","animation","text","map","index","theme","global","colors","font","family","size","height","button","border","radius","Skeleton","children","Grommet","full","justify","fill","WelcomePage","title","firstClueSlug","buttonClicked","setButtonClicked","Heading","onClick","FinalPage","Routes","Object","keys","data","lastAnswerSlug","values","slice","entries","clueSlug","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f073108.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n  Button,\n  Box,\n  Form,\n  FormField,\n  Text,\n  TextInput,\n} from 'grommet';\n\ninterface Props {\n    onSubmit: () => void;\n    setFormValues: (value: string) => void;\n    formError: string;\n}\n\nexport default function ClueForm(props: Props) {\n    return (\n    <Form\n        // @ts-ignore\n        onChange={(formValues) => props.setFormValues(formValues.answer)}\n        onSubmit={() => props.onSubmit()}\n      >\n        <FormField name='answer'>\n          <TextInput name='answer' type='text' textAlign='center'/>\n        </FormField>\n        {props.formError && (\n          <Box pad={{ vertical: 'small' }}>\n            <Text color='status-error' textAlign='center'>{props.formError}</Text>\n          </Box>\n        )}\n        <Box align={'center'} pad={{vertical: 'large'}}>\n          <Button type='submit' label='SUBMIT'/>\n        </Box>\n      </Form>\n    )\n}","export const FADE_OUT = 2000;\nexport const FADE_IN = 4000;","import React, { useEffect, useState } from 'react';\nimport {Redirect} from 'react-router-dom';\n\nimport {Box, Heading, Text} from 'grommet';\n\nimport ClueForm from '../components/ClueForm';\nimport { FADE_IN, FADE_OUT } from '../constants';\n\ninterface Clue {\n  title: string,\n  text: string[],\n  hint: string,\n  answer: string\n}\n\ninterface Props {\n  clue: Clue\n}\n\nconst slugifyAnswer = (answer: string): string => {\n  return answer.toLowerCase().replaceAll(' ', '-');\n}\n\nfunction CluePage({clue}: Props) {\n  const [value, setValue] = useState<string>(\"\");\n  const [answerCorrect, setAnswerCorrect] = useState<boolean>(false)\n  const [formError, setFormError] = useState<string>(\"\");\n  const [formSubmitted, setFormSubmitted] = useState<boolean>(false);\n  const [redirect, setRedirect] = useState<boolean>(false);\n\n  useEffect(() => {\n    const slugAnswer = slugifyAnswer(value);\n\n    if (slugAnswer === clue.answer) {\n      setAnswerCorrect(true);\n      setTimeout(() => setRedirect(true), FADE_OUT);\n    } else if (formSubmitted) {\n      setFormError(clue.hint);\n      setFormSubmitted(false);\n    }\n  }, [formSubmitted]);\n\n  const boxFade = answerCorrect ? 'fadeOut' : 'fadeIn';\n  const duration = answerCorrect ? FADE_OUT : FADE_IN;\n\n  return redirect ? (\n    <Redirect to={`/${slugifyAnswer(value)}/`}/>\n    ) : (\n      <Box\n        pad='large'\n        animation={{ type: boxFade, duration: duration }}\n        align='center'\n      >\n        <Box align='center'>\n          {clue.text.map((text: string, index: number) => (\n            <Text key={`${index}`} textAlign={'center'}>{text}</Text>\n          ))}\n        </Box>\n        <ClueForm\n          onSubmit={() => setFormSubmitted(true)}\n          setFormValues={setValue}\n          formError={formError}\n        />\n      </Box>\n    )\n}\n\nexport default CluePage;\n","import React from 'react';\n\nimport { Box, Grommet } from 'grommet';\n\nconst theme = {\n  global: {\n    colors: {\n      theme: '#660080',\n    },\n    font: {\n      family: 'Quattrocento Sans',\n      size: '18px',\n      height: '20px',\n    },\n  },\n  button: {\n    border: {\n      radius: '18px',\n      color: 'theme'\n    },\n    color: 'theme'\n  }\n};\n\nconst Skeleton: React.FC<{}> = ({children}) => (\n  <Grommet theme={theme} full={true}>\n    <Box justify={\"center\"} fill={\"vertical\"}>\n      {children}\n    </Box>\n  </Grommet>\n);\n\nexport default Skeleton;\n","import React, { useEffect, useState } from 'react';\nimport {Redirect} from 'react-router-dom';\n\nimport {Box, Button, Heading, Text} from 'grommet';\nimport { FADE_OUT } from '../constants';\n\ninterface Props {\n  title: string,\n  text: string[],\n  firstClueSlug: string\n}\n\nfunction WelcomePage({title, text, firstClueSlug}: Props) {\n  const [buttonClicked, setButtonClicked] = useState<boolean>(false);\n  const [redirect, setRedirect] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (buttonClicked) {\n      setTimeout(() => setRedirect(true), FADE_OUT);\n    }\n  }, [buttonClicked]);\n\n  const duration = FADE_OUT;\n\n  return redirect ? (\n      <Redirect to={`/${firstClueSlug}/`}/>\n    ) : (\n      <Box\n        pad='large'\n        animation={buttonClicked ? { type: 'fadeOut', duration: duration } : {}}\n        align='center'\n      >\n        <Box align='center'>\n          <Heading textAlign='center' color='theme'>Welcome to the {title} treasure hunt!</Heading>\n          {text.map((text: string, index: number) => (\n            <Text key={`${index}`} textAlign={'center'}>{text}</Text>\n          ))}\n        </Box>\n        <Box align={'center'} pad={{vertical: 'large'}}>\n          <Button\n            onClick={() => setButtonClicked(true)}\n            label=\"PROCEED\"\n          />\n        </Box>\n      </Box>\n    )\n}\n\nexport default WelcomePage;\n","import React from 'react';\n\nimport {Box, Heading, Text} from 'grommet';\nimport { FADE_IN } from '../constants';\n\ninterface Props {\n  title: string,\n  text: string[]\n}\n\nfunction FinalPage({title, text}: Props) {\n  return (\n    <Box\n      pad='large'\n      animation={{ type: 'fadeIn', duration: FADE_IN }}\n      align='center'\n    >\n      <Box align='center'>\n        <Heading textAlign='center' color='theme'>{title} complete!</Heading>\n        {text.map((text: string, index: number) => (\n          <Text key={`${index}`} textAlign={'center'}>{text}</Text>\n        ))}\n      </Box>\n    </Box>\n  )\n}\n\nexport default FinalPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport CluePage from './pages/CluePage.tsx';\nimport Skeleton from './skeleton/Skeleton.tsx';\n\nimport * as data from './data.json';\nimport WelcomePage from './pages/WelcomePage';\nimport FinalPage from './pages/FinalPage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nfunction Routes(){\n  const firstClueSlug = Object.keys(data.clues)[0];\n  const lastAnswerSlug = Object.values(data.clues).slice(-1)[0].answer;\n\n  return (\n  <Router>\n    <Skeleton>\n      <Switch>\n         {Object.entries(data.clues).map(([clueSlug, clue], index) => (\n          <Route path={`/${clueSlug}/`} key={`${index}`}>\n            <CluePage clue={clue}/>\n          </Route>\n         ))}\n         <Route path={`/${lastAnswerSlug}`}>\n          <FinalPage\n            title={data.name}\n            text={data.finalPageText}\n          />\n         </Route>\n         <Route path=\"/\">\n          <WelcomePage\n            title={data.name}\n            text={data.landingPageText}\n            firstClueSlug={firstClueSlug}\n          />\n         </Route>\n      </Switch>\n    </Skeleton>\n  </Router>\n  )\n}"],"sourceRoot":""}