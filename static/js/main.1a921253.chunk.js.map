{"version":3,"sources":["components/ClueForm.tsx","constants.ts","pages/CluePage.tsx","skeleton/Skeleton.tsx","pages/WelcomePage.tsx","pages/FinalPage.tsx","index.js"],"names":["ClueForm","props","Form","onChange","formValues","setFormValues","answer","onSubmit","FormField","name","TextInput","type","textAlign","size","formError","Box","pad","vertical","Text","color","align","Button","label","FADE_OUT","slugifyAnswer","toLowerCase","replaceAll","CluePage","clue","useState","value","setValue","answerCorrect","setAnswerCorrect","setFormError","formSubmitted","setFormSubmitted","redirect","setRedirect","useEffect","slugAnswer","setTimeout","hint","boxFade","duration","to","animation","text","map","index","margin","theme","global","colors","background","highlight","focus","border","font","family","height","button","radius","Skeleton","children","Grommet","full","image","repeat","justify","fill","WelcomePage","firstClueSlug","buttonClicked","setButtonClicked","Heading","onClick","FinalPage","Routes","data","lastAnswerSlug","Object","values","slice","entries","clueSlug","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a921253.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n  Button,\n  Box,\n  Form,\n  FormField,\n  Text,\n  TextInput,\n} from 'grommet';\n\ninterface Props {\n    onSubmit: () => void;\n    setFormValues: (value: string) => void;\n    formError: string;\n}\n\nexport default function ClueForm(props: Props) {\n    return (\n    <Form\n        // @ts-ignore\n        onChange={(formValues) => props.setFormValues(formValues.answer)}\n        onSubmit={() => props.onSubmit()}\n      >\n        <FormField name='answer'>\n          <TextInput name='answer' type='text' textAlign='center' size={'large'}/>\n        </FormField>\n        {props.formError && (\n          <Box pad={{ vertical: 'small' }}>\n            <Text color='status-error' textAlign='center' size={'large'}>\n              {props.formError}\n            </Text>\n          </Box>\n        )}\n        <Box align={'center'} pad={{vertical: 'large'}}>\n          <Button type='submit' label='SUBMIT'/>\n        </Box>\n      </Form>\n    )\n}","export const FADE_OUT = 2000;\nexport const FADE_IN = 4000;","import React, { useEffect, useState } from 'react';\nimport {Redirect} from 'react-router-dom';\n\nimport {Box, Text} from 'grommet';\n\nimport ClueForm from '../components/ClueForm';\nimport { FADE_IN, FADE_OUT } from '../constants';\n\ninterface Clue {\n  text: string[],\n  hint: string,\n  answer: string\n}\n\ninterface Props {\n  clue: Clue\n}\n\nconst slugifyAnswer = (answer: string): string => {\n  return answer.toLowerCase().replaceAll(' ', '-');\n}\n\nfunction CluePage({clue}: Props) {\n  const [value, setValue] = useState<string>(\"\");\n  const [answerCorrect, setAnswerCorrect] = useState<boolean>(false)\n  const [formError, setFormError] = useState<string>(\"\");\n  const [formSubmitted, setFormSubmitted] = useState<boolean>(false);\n  const [redirect, setRedirect] = useState<boolean>(false);\n\n  useEffect(() => {\n    const slugAnswer = slugifyAnswer(value);\n\n    if (slugAnswer === clue.answer) {\n      setAnswerCorrect(true);\n      setTimeout(() => setRedirect(true), FADE_OUT);\n    } else if (formSubmitted) {\n      if (slugAnswer) {\n        setFormError(clue.hint);\n      } else {\n        setFormError(\"You must submit an answer.\")\n      }\n      \n      setFormSubmitted(false);\n    }\n  }, [clue, value, formSubmitted]);\n\n  const boxFade = answerCorrect ? 'fadeOut' : 'fadeIn';\n  const duration = answerCorrect ? FADE_OUT : FADE_IN;\n\n  return redirect ? (\n    <Redirect to={`/treasure/${slugifyAnswer(value)}/`}/>\n    ) : (\n      <Box\n        pad='large'\n        animation={{ type: boxFade, duration: duration }}\n        align='center'\n      >\n        {clue.text.map((text: string, index: number) => (\n          <Text \n            key={`${index}`} \n            textAlign={'center'} \n            margin={'xsmall'}\n            size={'large'}\n          >\n            {text}\n          </Text>\n        ))}\n        <ClueForm\n          onSubmit={() => setFormSubmitted(true)}\n          setFormValues={setValue}\n          formError={formError}\n        />\n      </Box>\n    )\n}\n\nexport default CluePage;\n","import React from 'react';\n\nimport { Box, Grommet } from 'grommet';\n\nconst theme = {\n  global: {\n    colors: {\n      theme: '#921D46',\n      background: '#f0dfc8',\n      highlight: '#1D050E',\n      text: {\n        \"dark\": \"#f8f8f8\", \n        \"light\": \"#333333\"\n      }\n    },\n    focus: {\n      border: {\n        color: 'highlight'\n      }\n    },\n    font: {\n      family: 'Pirata One',\n      size: '18px',\n      height: '20px'\n    }\n  },\n  button: {\n    border: {\n      radius: '18px',\n      color: 'theme'\n    },\n    color: 'theme'\n  }\n};\n\nconst backgroundImageUrl = 'url(\"https://www.transparenttextures.com/patterns/fresh-snow.png\")';\n\nconst Skeleton: React.FC<{}> = ({children}) => (\n  <Grommet theme={theme} full={true} background={{color: 'background', image: backgroundImageUrl, repeat: 'repeat', size: '1000px'}}>\n    <Box justify={'center'} fill={'vertical'}>\n      {children}\n    </Box>\n  </Grommet>\n);\n\nexport default Skeleton;\n","import React, { useEffect, useState } from 'react';\nimport {Redirect} from 'react-router-dom';\n\nimport {Box, Button, Heading, Text} from 'grommet';\nimport { FADE_OUT } from '../constants';\n\ninterface Props {\n  text: string[],\n  firstClueSlug: string\n}\n\nfunction WelcomePage({text, firstClueSlug}: Props) {\n  const [buttonClicked, setButtonClicked] = useState<boolean>(false);\n  const [redirect, setRedirect] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (buttonClicked) {\n      setTimeout(() => setRedirect(true), FADE_OUT);\n    }\n  }, [buttonClicked]);\n\n  const duration = FADE_OUT;\n\n  return redirect ? (\n      <Redirect to={`/treasure/${firstClueSlug}/`}/>\n    ) : (\n      <Box\n        pad='large'\n        animation={buttonClicked ? { type: 'fadeOut', duration: duration } : {}}\n        align='center'\n      >\n        <Box align='center' margin={{\"bottom\":\"medium\"}}>\n          <Heading textAlign='center' color='theme' size={'large'}>Ahoy there!</Heading>\n          {text.map((text: string, index: number) => (\n            <Text \n              key={`${index}`} \n              textAlign={'center'} \n              margin={'xsmall'}\n              size={'large'}\n            >\n              {text}\n            </Text>\n          ))}\n          <Box align={'center'} pad={{vertical: 'large'}}>\n            <Button\n              onClick={() => setButtonClicked(true)}\n              label='PROCEED'\n            />\n          </Box>\n        </Box>\n      </Box>\n    )\n}\n\nexport default WelcomePage;\n","import React from 'react';\n\nimport {Box, Heading, Text} from 'grommet';\nimport { FADE_IN } from '../constants';\n\ninterface Props {\n  text: string[]\n}\n\nfunction FinalPage({text}: Props) {\n  return (\n    <Box\n      pad='large'\n      animation={{ type: 'fadeIn', duration: FADE_IN }}\n      align='center'\n    >\n      <Box align='center'>\n        <Heading textAlign='center' color='theme'>PIRATES TRUST NOONE!</Heading>\n        {text.map((text: string, index: number) => (\n          <Text \n            key={`${index}`} \n            textAlign={'center'} \n            margin={'xsmall'}\n            size={'large'}\n          >\n            {text}\n          </Text>\n        ))}\n      </Box>\n    </Box>\n  )\n}\n\nexport default FinalPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport CluePage from './pages/CluePage.tsx';\nimport Skeleton from './skeleton/Skeleton.tsx';\n\nimport * as data from './data.json';\nimport WelcomePage from './pages/WelcomePage';\nimport FinalPage from './pages/FinalPage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nfunction Routes(){\n  const firstClueSlug = data.firstClue;\n  const lastAnswerSlug = Object.values(data.clues).slice(-1)[0].answer;\n\n  return (\n  <Router>\n    <Skeleton>\n      <Switch>\n         {Object.entries(data.clues).map(([clueSlug, clue], index) => (\n          <Route path={`/treasure/${clueSlug}/`} key={`${index}`}>\n            <CluePage clue={clue}/>\n          </Route>\n         ))}\n         <Route path={`/treasure/${lastAnswerSlug}`}>\n          <FinalPage\n            text={data.finalPageText}\n          />\n         </Route>\n         <Route path=\"/\">\n          <WelcomePage\n            text={data.landingPageText}\n            firstClueSlug={firstClueSlug}\n          />\n         </Route>\n      </Switch>\n    </Skeleton>\n  </Router>\n  )\n}"],"sourceRoot":""}